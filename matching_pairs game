<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<title>Matching Pairs Game</title>
<style>
  body {
    font-family: Arial, sans-serif;
    background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    min-height: 100vh;
  }
  h2 {
    color: #333;
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(4, 80px);
    gap: 15px;
    margin-top: 20px;
  }
  .card {
    width: 80px;
    height: 80px;
    background-color: #4caf50;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 40px;
    color: white;
    user-select: none;
    transition: background-color 0.3s ease;
  }
  .matched {
    background-color: #8bc34a;
    cursor: default;
  }
  .message {
    margin-top: 20px;
    font-weight: bold;
    font-size: 1.3em;
  }
  .restart-btn {
    margin-top: 20px;
    padding: 8px 16px;
    background-color: #2196F3;
    border: none;
    border-radius: 8px;
    color: white;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  .restart-btn:hover {
    background-color: #1976D2;
  }
</style>
</head>
<body>

<h2>Matching Pairs Game</h2>
<div class="grid" id="grid"></div>
<p class="message" id="message"></p>
<button class="restart-btn" onclick="restartGame()">Restart Game</button>
<button onclick="backToGuessing()" style="margin-top:10px;">Back to Number Guessing Game</button>

<script>
  const emojis = ['🍎', '🍌', '🍒', '🍇', '🍉', '🥝', '🍍', '🥥'];
  let cards = [...emojis, ...emojis];
  let firstCard = null;
  let secondCard = null;
  let lockBoard = false;
  let matchedPairs = 0;

  function shuffle(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }

  function createBoard() {
    matchedPairs = 0;
    firstCard = null;
    secondCard = null;
    lockBoard = false;
    const grid = document.getElementById('grid');
    grid.innerHTML = '';
    cards = shuffle(cards);
    cards.forEach((emoji, index) => {
      const card = document.createElement('div');
      card.classList.add('card');
      card.dataset.emoji = emoji;
      card.dataset.index = index;
      card.textContent = '';
      card.addEventListener('click', flipCard);
      grid.appendChild(card);
    });
    document.getElementById('message').textContent = '';
  }

  function flipCard() {
    if (lockBoard) return;
    if (this.classList.contains('matched')) return;
    if (this === firstCard) return;

    this.textContent = this.dataset.emoji;

    if (!firstCard) {
      firstCard = this;
      return;
    }

    secondCard = this;
    lockBoard = true;

    if (firstCard.dataset.emoji === secondCard.dataset.emoji) {
      firstCard.classList.add('matched');
      secondCard.classList.add('matched');
      matchedPairs++;
      resetTurn();

      if (matchedPairs === emojis.length) {
        document.getElementById('message').textContent = 'Great job! You completed the game.';
      }
    } else {
      setTimeout(() => {
        firstCard.textContent = '';
        secondCard.textContent = '';
        resetTurn();
      }, 1000);
    }
  }

  function resetTurn() {
    [firstCard, secondCard] = [null, null];
    lockBoard = false;
  }

  function restartGame() {
    createBoard();
  }

  function backToGuessing() {
    window.location.href = 'index.html';
  }

  createBoard();
</script>

</body>
</html>
